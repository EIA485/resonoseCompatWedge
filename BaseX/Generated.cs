using System.Runtime.CompilerServices;
[assembly: TypeForwardedTo(typeof(Elements.Core.TriOperator<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.FloatOperator<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Lerper<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.InverseLerper<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SmoothLerper<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Encoder<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Decoder<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.QuantizedEncoder<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.QuantizedDecoder<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Saver<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Loader<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringEncoder<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringDecoder<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Measurer<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.TryParser<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Coder))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Coder<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.CoderNullable))]
[assembly: TypeForwardedTo(typeof(Elements.Core.CoderNullable<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ArrayPool<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataSegmentChain))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataSegmentData))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataSegment))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DictionaryEnumerableWrapper<,>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DictionaryList<,>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.EmptyEnumerator<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.EnumerableWrapper<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.EnumerableWrapper<,>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.HashSetEnumerableWrapper<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.KeyCounter<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ListEnumerableWrapper<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SlimListEnumerableWrapper<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SlimList<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SlimPoolList<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SpinHashSet<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SpinStack<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Indexer<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.InterleavedArray<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IPoolable))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Pool))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Pool<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RawList<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RawValueList<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ColorProfile))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ColorProfileHelper))]
[assembly: TypeForwardedTo(typeof(Elements.Core.colorXExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.colorX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.MathX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.bobool3ol))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BoundingBox2D))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BoundingSphere))]
[assembly: TypeForwardedTo(typeof(Elements.Core.color32))]
[assembly: TypeForwardedTo(typeof(Elements.Core.color))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ColorChannel))]
[assembly: TypeForwardedTo(typeof(Elements.Core.dummy))]
[assembly: TypeForwardedTo(typeof(Elements.Core.EnumUtil))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IntRect))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IntRectExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.LockCounter))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IQuaternion))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IQuaternion<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.floatQ))]
[assembly: TypeForwardedTo(typeof(Elements.Core.FloatQExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.doubleQ))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DoubleQExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Rect))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RectExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RefID))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RefIDExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IVector))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IVector<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.bool2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Bool2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.uint2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Uint2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ulong2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Ulong2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.int2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Int2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.long2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Long2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.float2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Float2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.double2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Double2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.bool3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Bool3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.uint3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Uint3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ulong3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Ulong3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.int3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Int3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.long3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Long3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.float3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Float3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.double3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Double3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.bool4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Bool4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.uint4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Uint4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ulong4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Ulong4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.int4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Int4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.long4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Long4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.float4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Float4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.double4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Double4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.LoadSaveHelper))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IEncodable))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RectOrientation))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BallisticStepper))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataTypeExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DynamicStructFieldAccess))]
[assembly: TypeForwardedTo(typeof(Elements.Core.FlagExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RandomX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RandomXGenerator))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ReflectionExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RobustParser))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SignalX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StructFieldMissingException))]
[assembly: TypeForwardedTo(typeof(Elements.Core.TypeHelper))]
[assembly: TypeForwardedTo(typeof(Elements.Core.WebClientEx))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BitQueue))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BitQueueExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BitStack))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BitStackExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PrimitiveCircularBuffer<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SpinQueue<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ValuePair<,>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BiDictionary<,>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ColorHSL))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ColorHSV))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ColorExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IMatrix))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IMatrix<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.float2x2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Float2x2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.double2x2))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Double2x2Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.float3x3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Float3x3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.double3x3))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Double3x3Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.float4x4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Float4x4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.double4x4))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Double4x4Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Number))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PrimitivesUtility))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataCoding))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataTreeConverter))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataTreeDictionary))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataTreeList))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataTreeValue))]
[assembly: TypeForwardedTo(typeof(Elements.Core.DataTreeNode))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BinaryReaderExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BinaryWriterExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.CollectionsExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RandomExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StaticConstructor<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ConvexHullHelper))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PointMerger))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BinaryReaderX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BinaryWriterX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BitBinaryReaderX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BitBinaryWriterX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BitReaderStream))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BitWriterStream))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ConcatenatedStream))]
[assembly: TypeForwardedTo(typeof(Elements.Core.NullStream))]
[assembly: TypeForwardedTo(typeof(Elements.Core.FileUtil))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PathUtility))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StreamProgressWrapper))]
[assembly: TypeForwardedTo(typeof(Elements.Core.WrappedStream))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IScalableElement))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IPatternProducer))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PatternGenerator))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PatternGroup))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PatternForcedLength))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PatternMaxLength))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PatternLengthSplicer))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PatternSequence))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PatternRandom))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PointEvent))]
[assembly: TypeForwardedTo(typeof(Elements.Core.AbstractLinePainter))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BlendShape))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BlendShapeFrame))]
[assembly: TypeForwardedTo(typeof(Elements.Core.MeshX))]
[assembly: TypeForwardedTo(typeof(Elements.Core.MeshX_Extensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SubmeshTopology))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ISubmesh<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Submesh))]
[assembly: TypeForwardedTo(typeof(Elements.Core.MultiVertex))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SubmeshMetadata))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BoneMetadata))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ApproximateBoneBounds))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IMeshXElement))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IMeshXPrimitive))]
[assembly: TypeForwardedTo(typeof(Elements.Core.AppendResult))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BoneBinding))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Bone))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PolarGrid))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Point))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PointCollection))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PointSubmesh))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SmoothNormalsContext))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SegmentPainter))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Arrow))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BevelBox))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Box))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Circle))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ConicalTube))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Frame))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Grid))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Line2D))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Ring))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ConicalFrustum))]
[assembly: TypeForwardedTo(typeof(Elements.Core.EdgeBlockBuilder))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BevelEdgeBlockBuilder))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IcoSphere))]
[assembly: TypeForwardedTo(typeof(Elements.Core.LabelPointer))]
[assembly: TypeForwardedTo(typeof(Elements.Core.MeshXShape))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Quad))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Screw))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ProfileSegmentedBuilderBase))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ProfileSegmentedBuilder))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ProfileSegment))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Segment))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SegmentedBuilder))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SegmentedBuilder<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StripBuilder))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StripSegment))]
[assembly: TypeForwardedTo(typeof(Elements.Core.TubeBuilder))]
[assembly: TypeForwardedTo(typeof(Elements.Core.TubeSegment))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Torus))]
[assembly: TypeForwardedTo(typeof(Elements.Core.UVSphereCapsule))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Triangle))]
[assembly: TypeForwardedTo(typeof(Elements.Core.TriangleCollectionSlice))]
[assembly: TypeForwardedTo(typeof(Elements.Core.TriangleCollection))]
[assembly: TypeForwardedTo(typeof(Elements.Core.trig))]
[assembly: TypeForwardedTo(typeof(Elements.Core.TriangleSubmesh))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IVertex))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Vertex))]
[assembly: TypeForwardedTo(typeof(Elements.Core.VertexCollection))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BatchQuery<,>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.WorkType))]
[assembly: TypeForwardedTo(typeof(Elements.Core.WorkProcessor))]
[assembly: TypeForwardedTo(typeof(Elements.Core.JobExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Job))]
[assembly: TypeForwardedTo(typeof(Elements.Core.Job<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.CharSpanParser))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringSegment))]
[assembly: TypeForwardedTo(typeof(Elements.Core.CallbackProgressIndicator))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ConsoleProgressIndicator))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ProgressUpdate))]
[assembly: TypeForwardedTo(typeof(Elements.Core.ProgressFinish))]
[assembly: TypeForwardedTo(typeof(Elements.Core.IProgressIndicator))]
[assembly: TypeForwardedTo(typeof(Elements.Core.MonoPInvokeCallbackAttribute))]
[assembly: TypeForwardedTo(typeof(Elements.Core.SpanExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringHelper))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringSegmentToken))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringSegmentTokenExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringToken))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringContent))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringOpeningTag))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringClosingTag))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringTokenizer))]
[assembly: TypeForwardedTo(typeof(Elements.Core.TagTracker))]
[assembly: TypeForwardedTo(typeof(Elements.Core.UniLog))]
[assembly: TypeForwardedTo(typeof(Elements.Core.UniLogTraceListener))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BoundingBox))]
[assembly: TypeForwardedTo(typeof(Elements.Core.BoundingBoxExtensions))]
[assembly: TypeForwardedTo(typeof(Elements.Core.PrimitiveTryParsers))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RectPackNode))]
[assembly: TypeForwardedTo(typeof(Elements.Core.RefVal<>))]
[assembly: TypeForwardedTo(typeof(Elements.Core.NumericComparer))]
[assembly: TypeForwardedTo(typeof(Elements.Core.StringLogicalComparer))]
[assembly: TypeForwardedTo(typeof(Elements.Core.UniLogProgressIndicator))]
[assembly: TypeForwardedTo(typeof(Elements.Core.UnitFormatting))]
